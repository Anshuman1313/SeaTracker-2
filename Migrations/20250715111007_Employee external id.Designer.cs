// <auto-generated />
using System;
using Assiginment.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assiginment.Migrations
{
    [DbContext(typeof(DevContext))]
    [Migration("20250715111007_Employee external id")]
    partial class Employeeexternalid
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assiginment.Models.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<DateOnly>("AttendanceDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("CheckInTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("CheckOutTime")
                        .HasColumnType("time");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Present");

                    b.HasKey("AttendanceId")
                        .HasName("PK__Attendan__8B69261C3BF27B1C");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_Attendance_EmployeeId");

                    b.HasIndex(new[] { "EmployeeId", "AttendanceDate" }, "UC_Attendance")
                        .IsUnique()
                        .HasFilter("[EmployeeId] IS NOT NULL");

                    b.ToTable("Attendance", (string)null);
                });

            modelBuilder.Entity("Assiginment.Models.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Department")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Designation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateOnly?>("JoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__7AD04F118422B7F1");

                    b.HasIndex(new[] { "UserId" }, "UQ__Employee__1788CC4D2BE47381")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Assiginment.Models.Leaf", b =>
                {
                    b.Property<int>("LeaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveId"));

                    b.Property<DateTime?>("AppliedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("FromDate")
                        .HasColumnType("date");

                    b.Property<string>("LeaveType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<DateOnly?>("ToDate")
                        .HasColumnType("date");

                    b.HasKey("LeaveId")
                        .HasName("PK__Leaves__796DB9596B653B53");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_Leaves_EmployeeId");

                    b.ToTable("Leaves");
                });

            modelBuilder.Entity("Assiginment.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4CBDBFC54D");

                    b.HasIndex(new[] { "UserName" }, "IX_Users_UserName");

                    b.HasIndex(new[] { "UserName" }, "UQ__Users__C9F28456D5B9B4BC")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Assiginment.Models.Attendance", b =>
                {
                    b.HasOne("Assiginment.Models.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__Attendanc__Emplo__44FF419A");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Assiginment.Models.Employee", b =>
                {
                    b.HasOne("Assiginment.Models.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("Assiginment.Models.Employee", "UserId")
                        .HasConstraintName("FK__Employees__UserI__3F466844");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Assiginment.Models.Leaf", b =>
                {
                    b.HasOne("Assiginment.Models.User", "ApprovedByNavigation")
                        .WithMany("Leaves")
                        .HasForeignKey("ApprovedBy")
                        .HasConstraintName("FK__Leaves__Approved__4CA06362");

                    b.HasOne("Assiginment.Models.Employee", "Employee")
                        .WithMany("Leaves")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__Leaves__Employee__4BAC3F29");

                    b.Navigation("ApprovedByNavigation");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Assiginment.Models.Employee", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Leaves");
                });

            modelBuilder.Entity("Assiginment.Models.User", b =>
                {
                    b.Navigation("Employee");

                    b.Navigation("Leaves");
                });
#pragma warning restore 612, 618
        }
    }
}
